version: '1.0'
stages:
- checkout
- sourcecheckout
- prepare
- build
- push
steps:
  main_clone:
    title: Cloning cf auto repository...
    type: git-clone
    stage: checkout
    repo: ${{CF_REPO_OWNER}}/cf_automation
    revision: master
    git: github
    
  source_clone:
    title: Cloning app source repository...
    type: git-clone
    stage: sourcecheckout
    repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    revision: ${{CF_BRANCH}}
    git: github
    
  prepare_environment_variabels:
    stage: prepare
    title: 'Prepare environment variables'
    image: ${{CF_REPO_OWNER}}/cf_automation
    commands:
    - export PACKAGE_VERSION=$(if [  -f VERSION ]; then cat VERSION; else yq -r ".version" properties.yaml; fi;)
    - echo "CURRENT_VERSION=$PACKAGE_VERSION"
    when:
      steps:
      - name: main_clone
        on:
        - success   
    
  build:
    stage: build
    title: "Building production image"
    type: build
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}
    dockerfile: Dockerfile
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    build_arguments:
    - CF_REVISION=${{CF_REVISION}}
    - CF_BRANCH=${{CF_BRANCH}}
    retry:
      maxAttempts: 3
      delay: 5
    metadata:
      set:
      - TICKET_CANDIDATE: ${{CF_BRANCH}}
    when:
      steps:
      - name: main_clone
        on:
        - success
      - name: source_clone
        on:
        - success  
    
  push_to_my_registry:
    stage: push
    title: 'Pushing image to registry'
    type: push
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    registry: dockerhub
    candidate: ${{build}}
    tags:
    - ${{CF_BRANCH_TAG_NORMALIZED}}
    - ${{CF_REVISION}}
    when:
      steps:
      - name: build
        on:
        - success
      - name: prepare_environment_variabels
        on:
        - success
